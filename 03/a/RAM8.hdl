// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in = load, sel = address, a = aload, b = bload, c = cload, d = dload, e = eload, f = fload, g = gload, h = hload);

    Register(in = in, load = aload, out = ao);
    Register(in = in, load = bload, out = bo);
    Register(in = in, load = cload, out = co);
    Register(in = in, load = dload, out = do);
    Register(in = in, load = eload, out = eo);
    Register(in = in, load = fload, out = fo);
    Register(in = in, load = gload, out = go);
    Register(in = in, load = hload, out = ho);

    Mux8Way16(a = ao, b = bo, c = co, d = do, e = eo, f = fo, g = go, h = ho, sel = address, out = out);
}
