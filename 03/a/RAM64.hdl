// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a = aload, b = bload, c = cload, d = dload, e = eload, f = fload, g = gload, h = hload);

    RAM8(in = in, load = aload, address = address[3..5], out = ao);
    RAM8(in = in, load = bload, address = address[3..5], out = bo);
    RAM8(in = in, load = cload, address = address[3..5], out = co);
    RAM8(in = in, load = dload, address = address[3..5], out = do);
    RAM8(in = in, load = eload, address = address[3..5], out = eo);
    RAM8(in = in, load = fload, address = address[3..5], out = fo);
    RAM8(in = in, load = gload, address = address[3..5], out = go);
    RAM8(in = in, load = hload, address = address[3..5], out = ho);

    Mux8Way16(a = ao, b = bo, c = co, d = do, e = eo, f = fo, g = go, h = ho, sel = address[0..2], out = out);
}
